// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: value.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinRange int32 `protobuf:"varint,1,opt,name=minRange,proto3" json:"minRange,omitempty"`
	MaxRange int32 `protobuf:"varint,2,opt,name=maxRange,proto3" json:"maxRange,omitempty"`
	Count    int32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *RangeQuery) Reset() {
	*x = RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_value_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeQuery) ProtoMessage() {}

func (x *RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_value_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeQuery.ProtoReflect.Descriptor instead.
func (*RangeQuery) Descriptor() ([]byte, []int) {
	return file_value_proto_rawDescGZIP(), []int{0}
}

func (x *RangeQuery) GetMinRange() int32 {
	if x != nil {
		return x.MinRange
	}
	return 0
}

func (x *RangeQuery) GetMaxRange() int32 {
	if x != nil {
		return x.MaxRange
	}
	return 0
}

func (x *RangeQuery) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ValueReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ValueReply) Reset() {
	*x = ValueReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_value_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueReply) ProtoMessage() {}

func (x *ValueReply) ProtoReflect() protoreflect.Message {
	mi := &file_value_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueReply.ProtoReflect.Descriptor instead.
func (*ValueReply) Descriptor() ([]byte, []int) {
	return file_value_proto_rawDescGZIP(), []int{1}
}

func (x *ValueReply) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ValuePairReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*ValueReply `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ValuePairReply) Reset() {
	*x = ValuePairReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_value_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuePairReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuePairReply) ProtoMessage() {}

func (x *ValuePairReply) ProtoReflect() protoreflect.Message {
	mi := &file_value_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValuePairReply.ProtoReflect.Descriptor instead.
func (*ValuePairReply) Descriptor() ([]byte, []int) {
	return file_value_proto_rawDescGZIP(), []int{2}
}

func (x *ValuePairReply) GetValues() []*ValueReply {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_value_proto protoreflect.FileDescriptor

var file_value_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a,
	0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x22, 0x0a, 0x0a, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a,
	0x0e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x23, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x32, 0x6c, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x0b, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x0b, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x2e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x0b, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x0f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x63, 0x66, 0x69, 0x7a, 0x68, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x64, 0x65, 0x6d,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_value_proto_rawDescOnce sync.Once
	file_value_proto_rawDescData = file_value_proto_rawDesc
)

func file_value_proto_rawDescGZIP() []byte {
	file_value_proto_rawDescOnce.Do(func() {
		file_value_proto_rawDescData = protoimpl.X.CompressGZIP(file_value_proto_rawDescData)
	})
	return file_value_proto_rawDescData
}

var file_value_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_value_proto_goTypes = []interface{}{
	(*RangeQuery)(nil),     // 0: RangeQuery
	(*ValueReply)(nil),     // 1: ValueReply
	(*ValuePairReply)(nil), // 2: ValuePairReply
}
var file_value_proto_depIdxs = []int32{
	1, // 0: ValuePairReply.values:type_name -> ValueReply
	0, // 1: Randomizer.GetValueStream:input_type -> RangeQuery
	0, // 2: Randomizer.GetValuePair:input_type -> RangeQuery
	1, // 3: Randomizer.GetValueStream:output_type -> ValueReply
	2, // 4: Randomizer.GetValuePair:output_type -> ValuePairReply
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_value_proto_init() }
func file_value_proto_init() {
	if File_value_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_value_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_value_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_value_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuePairReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_value_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_value_proto_goTypes,
		DependencyIndexes: file_value_proto_depIdxs,
		MessageInfos:      file_value_proto_msgTypes,
	}.Build()
	File_value_proto = out.File
	file_value_proto_rawDesc = nil
	file_value_proto_goTypes = nil
	file_value_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RandomizerClient is the client API for Randomizer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RandomizerClient interface {
	GetValueStream(ctx context.Context, in *RangeQuery, opts ...grpc.CallOption) (Randomizer_GetValueStreamClient, error)
	GetValuePair(ctx context.Context, in *RangeQuery, opts ...grpc.CallOption) (*ValuePairReply, error)
}

type randomizerClient struct {
	cc grpc.ClientConnInterface
}

func NewRandomizerClient(cc grpc.ClientConnInterface) RandomizerClient {
	return &randomizerClient{cc}
}

func (c *randomizerClient) GetValueStream(ctx context.Context, in *RangeQuery, opts ...grpc.CallOption) (Randomizer_GetValueStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Randomizer_serviceDesc.Streams[0], "/Randomizer/GetValueStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &randomizerGetValueStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Randomizer_GetValueStreamClient interface {
	Recv() (*ValueReply, error)
	grpc.ClientStream
}

type randomizerGetValueStreamClient struct {
	grpc.ClientStream
}

func (x *randomizerGetValueStreamClient) Recv() (*ValueReply, error) {
	m := new(ValueReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *randomizerClient) GetValuePair(ctx context.Context, in *RangeQuery, opts ...grpc.CallOption) (*ValuePairReply, error) {
	out := new(ValuePairReply)
	err := c.cc.Invoke(ctx, "/Randomizer/GetValuePair", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RandomizerServer is the server API for Randomizer service.
type RandomizerServer interface {
	GetValueStream(*RangeQuery, Randomizer_GetValueStreamServer) error
	GetValuePair(context.Context, *RangeQuery) (*ValuePairReply, error)
}

// UnimplementedRandomizerServer can be embedded to have forward compatible implementations.
type UnimplementedRandomizerServer struct {
}

func (*UnimplementedRandomizerServer) GetValueStream(*RangeQuery, Randomizer_GetValueStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetValueStream not implemented")
}
func (*UnimplementedRandomizerServer) GetValuePair(context.Context, *RangeQuery) (*ValuePairReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValuePair not implemented")
}

func RegisterRandomizerServer(s *grpc.Server, srv RandomizerServer) {
	s.RegisterService(&_Randomizer_serviceDesc, srv)
}

func _Randomizer_GetValueStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RangeQuery)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RandomizerServer).GetValueStream(m, &randomizerGetValueStreamServer{stream})
}

type Randomizer_GetValueStreamServer interface {
	Send(*ValueReply) error
	grpc.ServerStream
}

type randomizerGetValueStreamServer struct {
	grpc.ServerStream
}

func (x *randomizerGetValueStreamServer) Send(m *ValueReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Randomizer_GetValuePair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RangeQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RandomizerServer).GetValuePair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Randomizer/GetValuePair",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RandomizerServer).GetValuePair(ctx, req.(*RangeQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _Randomizer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Randomizer",
	HandlerType: (*RandomizerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetValuePair",
			Handler:    _Randomizer_GetValuePair_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetValueStream",
			Handler:       _Randomizer_GetValueStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "value.proto",
}
